Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                              main.o (__muluhisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o) (__umulhisi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x846
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000084        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000008c        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x000000000000008c                __vector_22
                0x000000000000008c                __vector_1
                0x000000000000008c                __vector_24
                0x000000000000008c                __vector_12
                0x000000000000008c                __bad_interrupt
                0x000000000000008c                __vector_6
                0x000000000000008c                __vector_23
                0x000000000000008c                __vector_25
                0x000000000000008c                __vector_13
                0x000000000000008c                __vector_17
                0x000000000000008c                __vector_19
                0x000000000000008c                __vector_7
                0x000000000000008c                __vector_9
                0x000000000000008c                __vector_2
                0x000000000000008c                __vector_21
                0x000000000000008c                __vector_15
                0x000000000000008c                __vector_8
                0x000000000000008c                __vector_14
                0x000000000000008c                __vector_10
                0x000000000000008c                __vector_16
                0x000000000000008c                __vector_18
                0x000000000000008c                __vector_20
 .text          0x0000000000000090      0x684 main.o
                0x00000000000000dc                __vector_11
                0x000000000000010c                __vector_3
                0x000000000000012a                __vector_4
                0x0000000000000148                __vector_5
                0x0000000000000166                bano_init
                0x0000000000000474                bano_fini
                0x0000000000000478                bano_send_set
                0x00000000000004c6                bano_wait_event
                0x00000000000006b0                bano_loop
                0x0000000000000708                bano_get_handler
                0x000000000000070c                bano_set_handler
                0x0000000000000710                bano_timer_handler
                0x0000000000000712                bano_pcint_handler
 .text          0x0000000000000714        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text          0x0000000000000714        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000714        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000714        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000714        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000000714                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000714       0xbc main.o
                0x0000000000000714                main
 .text.libgcc.mul
                0x00000000000007d0       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                0x00000000000007d0                __muluhisi3
 .text.libgcc.div
                0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000007e6       0x44 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                0x00000000000007e6                __udivmodsi4
 .text.libgcc   0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000082a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000082a       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                0x000000000000082a                __umulhisi3
 .text.libgcc.div
                0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000000842                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000842        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x0000000000000842                exit
                0x0000000000000842                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000842        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000846                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000846
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0x12
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800100       0x12 main.o
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800112                PROVIDE (__bss_end, .)
                0x0000000000000846                __data_load_start = LOADADDR (.data)
                0x0000000000000846                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800112        0x0
                0x0000000000800112                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800112                PROVIDE (__noinit_end, .)
                0x0000000000800112                _end = .
                0x0000000000800112                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1f5c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc     0x1890 main.o
                                       0x189c (size before relaxing)

.stabstr        0x0000000000000000      0xe9e
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe9e /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
